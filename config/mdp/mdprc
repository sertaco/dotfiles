# MDP folders on the machine
WORKSPACE=${HOME}'/workspace'
MDP=${WORKSPACE}'/mdp'

# DB endpoints
MDP_BUILD_DB='mdp-db-build-0.cuhwmvni5qkd.eu-west-1.rds.amazonaws.com'
MDP_SIT_DB='mdp-db-sit-0.cuhwmvni5qkd.eu-west-1.rds.amazonaws.com'

# API endpoints
BUILD_EC2='ip-10-68-39-113.eu-west-1.compute.internal'
SIT_EC2='ip-10-68-39-151.eu-west-1.compute.internal'

# Remote development ec2 configs
MDP_REMOTE_DEV='user@ec2-34-247-39-87.eu-west-1.compute.amazonaws.com'
MDP_KEY='~/.ssh/oxyma_ec2_rsa'

# MDP Functions
function mdp-deploy(){
mdp-emr-deploy $1 $2 || return 1
mdp-lambda-deploy $1 $2 || return 1
mdp-db-deploy $1 $2 || return 1
mdp-api-deploy $1 $2 || return 1
mdp-restart-api $1 || return 1
}

#$1:env $2:version
function mdp-emr-deploy(){
cd "$MDP"/emr
git checkout $2 || return 1
harc aws:emr:deploy -e $1 -u orucs -p Oxyma12345 -v $2
}

#$1:env $2:version
function mdp-lambda-deploy(){
cd "$MDP"/lambda
git checkout $2 || return 1
harc aws:lambda:deploy -e $1 -u orucs -p Oxyma12345 -v $2
}

#$1:env $2:version
function mdp-db-deploy(){
if [ $1 = 'build' ];
    then mdp_db="$MDP_BUILD_DB"
    elif [ $1 = 'sit' ]
        then mdp_db="$MDP_SIT_DB"
    else
        echo "unknown environment name"
fi
cd "$MDP"/db
git checkout $2 || return 1
mynoora recreate -h "$mdp_db" -e $1 || return 1
}

#$1:env $2:version
function mdp-api-deploy(){
cd "$MDP"/api
git checkout $2 || return 1
harc aws:ec2:deploy -e $1 -u GIT_USERNAME -p GIT_PASSWORD -v $2 || return 1
}

# $1:env
function mdp-restart-api(){
if [ $1 = 'build' ];
	then dns_name="$BUILD_EC2"
	elif [ $1 = 'sit' ]
        	then dns_name="$SIT_EC2"
	else
        	echo "unknown environment name"
fi
api_endpoint=ec2-user@"$dns_name"
ssh -i "$MDP_KEY" "$api_endpoint" sudo ./deploy-web-app.sh || return 1
}

# $1:env $2:directory 
function mdp-ssh(){
    if [ $# -ge 2 ]; then
        WS='workspace/'$2
        else
        WS='workspace'
    fi

    if [ $1 = 'dev' ]; then
        ssh -i $MDP_KEY -t $MDP_REMOTE_DEV 'cd '${WS}'; zsh'
    else
        ssh -i $MDP_KEY -t $1 'cd ${WS}; zsh'
    fi
}
